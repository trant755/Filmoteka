{"mappings":"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","sources":["src/js/generateTrandingCard.js","src/js/options-of-pagination.js","src/js/fetchModule.js","src/js/buttonToTop.js"],"sourcesContent":["import { refs } from './refs';\nimport MovieApiService from './fetchModule';\nimport localStorageAPI from './local-storage-api/local-storage-api';\nimport { onMarkupCards } from './onMarkupCards';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { options } from './options-of-pagination';\n// import openModal from'./modalWindow';\n\nconst API = new MovieApiService();\nconst LS_API = new localStorageAPI();\n\nrefs.searchInput.addEventListener('submit', searchFilm);\n\nconst pagination = new Pagination(refs.paginationContainer, options);\n\ngenerateHomePage();\n\nfunction generateHomePage() {\n  if (!LS_API.getGeneresLS()) {\n    API.fetchGenres().then(LS_API.saveGenersLS);\n  }\n  generateTrendingFilms();\n}\n\nfunction generateTrendingFilms() {\n  API.fetchTrending().then(({ results, total_results }) => {\n    pagination.setTotalItems(total_results);\n    onMarkupCards(results, refs.trandingContainer);\n    LS_API.saveTrendingCurentPage(results);\n  });\n}\n\nrefs.paginationContainer.addEventListener(\n  'click',\n  renderNewPageOfTrendingFilms\n);\n\nfunction renderNewPageOfTrendingFilms() {\n  clearGallery();\n\n  const newCurrentPage = pagination.getCurrentPage();\n  console.log(newCurrentPage);\n  API.addMoviesPage(newCurrentPage);\n  if (API.query === '') {\n    generateTrendingFilms();\n  } else if (API.query !== '') {\n    fetchSearchFilms();\n  }\n}\n\nfunction clearGallery() {\n  refs.trandingContainer.innerHTML = '';\n}\n\nasync function searchFilm(ev) {\n  ev.preventDefault();\n\n  if (!refs.SearchErrMessage.classList.contains('is-hidden')) {\n    refs.SearchErrMessage.classList.add('is-hidden');\n  }\n  API.query = ev.currentTarget.elements.searchQuery.value;\n\n  if (API.query === '') return;\n\n  API.resetMoviesPage();\n\n  await fetchSearchFilms();\n  pagination.reset();\n}\n\nasync function fetchSearchFilms() {\n  const data = await API.fetchMovies();\n\n  if (data.results.length === 0) {\n    refs.SearchErrMessage.classList.remove('is-hidden');\n    return;\n  }\n\n  pagination.setTotalItems(data.total_results);\n  clearGallery();\n  API.resetMoviesPage();\n  onMarkupCards(data.results, refs.trandingContainer);\n  LS_API.saveTrendingCurentPage(data.results);\n  console.log(data.results);\n}\n","export const options = {\n    totalItems: 20000,\n    itemsPerPage: 20,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage: '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n          '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      // \n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>'\n    }\n  };","const API_WEB = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=8a38092ae2d24fc685ebce0502669b7c';\n\nexport default class MovieApiService {\n  constructor() {\n    this.needToFind = '';\n    this.page = 1;\n  }\n\n  fetchGenres() {\n    const responceGenres = fetch(\n      `${API_WEB}/genre/movie/list?${API_KEY}&language=en-US`\n    )\n      .then(responceGenres => {\n        if (!responceGenres.ok) {\n          throw new Error(responceGenres.status);\n        }\n        return responceGenres.json();\n      })\n      .catch(error => {\n        error;\n      });\n    return responceGenres;\n  }\n\n  fetchTrending() {\n    const responceTrending = fetch(\n      `${API_WEB}/trending/movie/day?${API_KEY}&page=${this.page}`\n    )\n      .then(responceTrending => {\n        if (!responceTrending.ok) {\n          throw new Error(responceTrending.status);\n        }\n        return responceTrending.json();\n      })\n      .catch(error => {\n        error;\n      });\n    return responceTrending;\n  }\n\n  fetchMovies() {\n    const response = fetch(\n      `${API_WEB}/search/movie?${API_KEY}&query=${this.needToFind}&page=${this.page}`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .catch(error => {\n        console.log('Error on try...catch', error);\n      });\n    return response;\n  }\n\n  addMoviesPage(number) {\n    this.page = number;\n  }\n\n  resetMoviesPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.needToFind;\n  }\n\n  set query(newQuery) {\n    this.needToFind = newQuery;\n  }\n}\n","const toTopBtn = document.querySelector('.button-to-top');\nconst svgIcon = document.querySelector('.to-top-icon');\n\ntoTopBtn.addEventListener('click', onButtonClick);\n\nfunction onButtonClick() {\n  window.scrollTo(0, 0);\n}\n\nwindow.onscroll = function () {\n  scrollFunction();\n};\n\nfunction scrollFunction() {\n  if (\n    document.body.scrollTop > 700 ||\n    document.documentElement.scrollTop > 700\n  ) {\n    toTopBtn.style.visibility = 'visible';\n    svgIcon.style.opacity = 1;\n    toTopBtn.style.opacity = 1;\n  } else {\n    toTopBtn.style.visibility = 'hiden';\n    svgIcon.style.opacity = 0;\n    toTopBtn.style.opacity = 0;\n  }\n}\n"],"names":["$krGWQ","parcelRequire","$45a10bbc04e58c91$var$API","fetchGenres","fetch","then","responceGenres","ok","Error","status","json","catch","error","fetchTrending","this","page","responceTrending","fetchMovies","needToFind","response","console","log","addMoviesPage","number","resetMoviesPage","query","newQuery","constructor","$45a10bbc04e58c91$var$LS_API","$5eWcy","default","refs","searchInput","addEventListener","async","ev","preventDefault","SearchErrMessage","classList","contains","add","currentTarget","elements","searchQuery","value","$45a10bbc04e58c91$var$fetchSearchFilms","$45a10bbc04e58c91$var$pagination","reset","$parcel$interopDefault","$fb9GJ","paginationContainer","totalItems","itemsPerPage","visiblePages","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","$45a10bbc04e58c91$var$generateTrendingFilms","results","total_results","setTotalItems","$2pdLV","onMarkupCards","trandingContainer","saveTrendingCurentPage","$45a10bbc04e58c91$var$clearGallery","innerHTML","data","length","remove","getGeneresLS","saveGenersLS","$45a10bbc04e58c91$var$generateHomePage","newCurrentPage","getCurrentPage","$baa382108c2f403f$var$toTopBtn","document","querySelector","$baa382108c2f403f$var$svgIcon","window","scrollTo","onscroll","body","scrollTop","documentElement","style","visibility","opacity"],"version":3,"file":"index.d7d0f975.js.map"}