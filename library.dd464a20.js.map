{"mappings":"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","sources":["src/js/refs.js","src/js/watchedQueue.js","src/js/local-storage-api/local-storage-api.js"],"sourcesContent":["export const refs = {\n  paginationContainer: document.querySelector('.tui-pagination'),\n  trandingContainer: document.querySelector('#movie-container'),\n  searchInput: document.querySelector('.header-search-form'),\n  SearchErrMessage: document.querySelector('.header-message'),\n  watched: document.querySelector('.library--btn__watched'),\n  queue: document.querySelector('.library--btn__queue'),\n  movieContentBlock: document.querySelector('.no-movie'),\n};\n","import localStorageApi from './local-storage-api/local-storage-api';\nconst LS_API = new localStorageApi();\nimport { refs } from './refs';\n\nrefs.watched.addEventListener('click', onClickWatched);\nrefs.queue.addEventListener('click', onClickQueue);\n\nconsole.log(refs.movieContentBlock);\n\nlet currentPage = '';\n\nonClickWatched();\n\nfunction onClickWatched() {\n  currentPage = 'watched';\n  refs.watched.classList.add('library--btn--active');\n  refs.queue.classList.remove('library--btn--active');\n\n  if (LS_API.getFilmsFromWatched() && LS_API.getFilmsFromWatched.length > 0) {\n    clearMoviesContainer();\n    refs.movieContentBlock.classList.add('none');\n  } else {\n    refs.movieContentBlock.classList.remove('none');\n  }\n}\n\nfunction onClickQueue() {\n  currentPage = 'queue';\n  refs.watched.classList.remove('library--btn--active');\n  refs.queue.classList.add('library--btn--active');\n\n  if (LS_API.getFilmsFromQueue && LS_API.getFilmsFromQueue.length > 0) {\n    clearMoviesContainer();\n    refs.movieContentBlock.classList.add('none');\n  } else {\n    refs.movieContentBlock.classList.remove('none');\n  }\n}\n\nfunction clearMoviesContainer() {\n  refs.trandingContainer.innerHTML = '';\n}\n","const GENERS_KEY = 'savedGenresId';\nconst TRENDING_KEY = 'savedTrendingCurentPage';\nconst WATCHED_KEY = 'savedWatched';\nconst QUEUE_KEY = 'savedQueue';\n\nexport default class localStorageAPI {\n  constructor() {}\n\n  // ======= GENERS =====\n  saveGenersLS(data) {\n    let genersJSON = localStorage.getItem(GENERS_KEY);\n\n    if (!genersJSON) {\n      let genres = JSON.stringify(data);\n      localStorage.setItem(GENERS_KEY, genres);\n    }\n  }\n\n  getGeneresLS() {\n    let genersJSON = localStorage.getItem(GENERS_KEY);\n    if (genersJSON) {\n      return JSON.parse(genersJSON);\n    }\n  }\n\n  removeGeneresLS() {\n    localStorage.removeItem(GENERS_KEY);\n  }\n\n  // ======= TRENDING =======\n\n  saveTrendingCurentPage(data) {\n    let currentTrending = JSON.stringify(data);\n    localStorage.setItem(TRENDING_KEY, currentTrending);\n  }\n\n  getTrendingCurentPage() {\n    const trendingCurentPage = localStorage.getItem(TRENDING_KEY);\n    return JSON.parse(trendingCurentPage);\n  }\n\n  getTrendingFilmById(id) {\n    let trendingCurentPage = this.getTrendingCurentPage();\n    return trendingCurentPage?.find(film => film.id === id);\n  }\n\n  removeTrendingCurentPage() {\n    localStorage.removeItem(TRENDING_KEY);\n  }\n\n  // ======= WATCHED =======\n\n  saveFilmToWathched(data) {\n    let watchedLs = localStorage.getItem(WATCHED_KEY);\n    let watched =\n      !watchedLs || watchedLs.length === 0 ? [] : JSON.parse(watchedLs);\n    if (!data) return console.log('нима data');\n\n    watched.push(data);\n    localStorage.setItem(WATCHED_KEY, JSON.stringify(watched));\n  }\n\n  getFilmsFromWatched() {\n    let watchedLs = localStorage.getItem(WATCHED_KEY);\n    if (watchedLs) {\n      return JSON.parse(watchedLs);\n    }\n  }\n\n  getFilmFromWathedById(id) {\n    let savedWatched = this.getFilmsFromWatched();\n    return savedWatched?.find(film => film.id === id);\n  }\n\n  removeFilmFromWatched(id) {\n    let savedWatched = this.getFilmsFromWatched();\n\n    let filmToREmove = savedWatched.findIndex(film => film.id === id);\n    savedWatched.splice(filmToREmove, 1);\n\n    localStorage.setItem(WATCHED_KEY, JSON.stringify(savedWatched));\n  }\n\n  removeSaveWatchedFilms() {\n    localStorage.removeItem(WATCHED_KEY);\n  }\n\n  // ======== QUEUE =======\n\n  saveFilmToQueue(data) {\n    let queueLs = localStorage.getItem(QUEUE_KEY);\n    let queue = !queueLs || queueLs.length === 0 ? [] : JSON.parse(queueLs);\n    if (!data) return console.log('нима data');\n\n    queue.push(data);\n    localStorage.setItem(QUEUE_KEY, JSON.stringify(queue));\n  }\n\n  getFilmsFromQueue() {\n    let queueLs = localStorage.getItem(QUEUE_KEY);\n    if (queueLs) {\n      return JSON.parse(queueLs);\n    }\n  }\n\n  getFilmFromQueueById(id) {\n    let savedQueue = this.getFilmsFromQueue();\n    return savedQueue?.find(film => film.id === id);\n  }\n\n  removeFilmFromQueue(id) {\n    let savedQueue = this.getFilmsFromQueue();\n\n    let filmToREmove = savedQueue.findIndex(film => film.id === id);\n    savedQueue.splice(filmToREmove, 1);\n\n    localStorage.setItem(QUEUE_KEY, JSON.stringify(savedQueue));\n  }\n\n  removeSaveWatchedFilms() {\n    localStorage.removeItem(QUEUE_KEY);\n  }\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","paginationContainer","document","querySelector","trandingContainer","searchInput","SearchErrMessage","watched","queue","movieContentBlock","$f08658073f94003c$var$LS_API","saveGenersLS","data","localStorage","getItem","genres","JSON","stringify","setItem","getGeneresLS","genersJSON","parse","removeGeneresLS","removeItem","saveTrendingCurentPage","currentTrending","getTrendingCurentPage","trendingCurentPage","getTrendingFilmById","id","this","find","film","removeTrendingCurentPage","saveFilmToWathched","watchedLs","length","console","log","push","getFilmsFromWatched","getFilmFromWathedById","savedWatched","removeFilmFromWatched","filmToREmove","findIndex","splice","removeSaveWatchedFilms","saveFilmToQueue","queueLs","getFilmsFromQueue","getFilmFromQueueById","savedQueue","removeFilmFromQueue","constructor","addEventListener","$f08658073f94003c$var$onClickWatched","$f08658073f94003c$var$currentPage","classList","remove","add","$f08658073f94003c$var$clearMoviesContainer","innerHTML"],"version":3,"file":"library.dd464a20.js.map"}